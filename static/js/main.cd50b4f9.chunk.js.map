{"version":3,"sources":["components/NavBar.js","components/TextArea.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","props","className","mode","color","href","type","id","onClick","toggleBtnRed","htmlFor","btnText1","toggleBtnDark","btnText","TextArea","useState","text","setText","style","textColor","title","backgroundColor","onChange","event","newText","target","value","rows","finalText","toUpperCase","split","length","App","primaryClr","styleMode","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cd50b4f9.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function NavBar(props) {\r\n    return (\r\n        <div>\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode.color} bg-${props.mode.color}`}>\r\n                <a className=\"navbar-brand\" href='/'>Home</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item active\">\r\n                            <a className=\"nav-link\" href='/'>About <span className=\"sr-only\">(current)</span></a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href='/'>Contact</a>\r\n                        </li>\r\n                    </ul>\r\n                    <div className=\"custom-control custom-switch\">\r\n                        <input type=\"checkbox\" onClick={props.toggleBtnRed}  className=\"custom-control-input\" id=\"customSwitch1\" />\r\n                        <label className={`custom-control-label text-${props.mode.color==='light'?'dark':'light'}`} htmlFor=\"customSwitch1\">{props.mode.btnText1} red mode</label>\r\n                    </div>\r\n                    <div className=\"custom-control custom-switch mx-2\">\r\n                        <input type=\"checkbox\" onClick={props.toggleBtnDark} className=\"custom-control-input\" id=\"customSwitch3\" />\r\n                        <label className={`custom-control-label text-${props.mode.color==='light'?'dark':'light'}`} htmlFor=\"customSwitch3\">{props.mode.btnText} dark mode</label>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nexport default function TextArea(props) {\r\n    const [text, setText] = useState('Hey type here!');\r\n    function onchangeHandle(event) {\r\n        let newText = event.target.value;\r\n        setText(newText);\r\n    }\r\n    function handleOnSubmit() {\r\n        let finalText = text.toUpperCase();\r\n        setText(finalText);\r\n    }\r\n    return (\r\n        <>\r\n            <div className='container my-4'>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"exampleFormControlTextarea1\" className=\"form-label\">\r\n                        <h1 style={{ color:props.mode.textColor}}>{props.title}</h1> </label>\r\n                    <textarea style={{ backgroundColor: props.mode.color=== 'dark' ? 'grey' : 'white',color:props.mode.textColor}} className=\"form-control\" onChange={onchangeHandle} value={text} id=\"exampleFormControlTextarea1\" rows=\"8\"></textarea>\r\n                </div>\r\n                <button type=\"button\" onClick={handleOnSubmit} className=\"btn btn-primary\">Click to change to uppercase</button>\r\n                <div>\r\n                    <p style={{ color:props.mode.textColor}} className='my-2'>{text.split(' ').length - 1} word and {text.length} characters</p>\r\n                </div>\r\n                <h2 style={{ color:props.mode.textColor}} >Preview</h2>\r\n                <p style={{ color:props.mode.textColor}} >{text}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import NavBar from \"./components/NavBar\";\nimport TextArea from \"./components/TextArea\";\nimport React, { useState } from 'react';\n\n\nfunction App() {\n  const [mode, styleMode] = useState({\n    color: 'light',\n    textColor: 'black',\n    backgroundColor: 'white',\n    primaryClr: 'primary',\n    btnText:'Enable',\n    btnText1:'Enable'\n  });\n\n\n  const toggleButtonDark = () => {\n    if (mode.color === 'dark') {\n      document.body.style.backgroundColor = 'white'\n      styleMode({\n        color: 'light',\n        textColor: 'black',\n        primaryClr: 'primary',\n        btnText:'Enable',\n        btnText1:'Enable',\n      \n      })\n    } else {\n      document.body.style.backgroundColor = 'grey'\n      styleMode({\n        color: 'dark',\n        textColor: 'white',\n        primaryClr: 'primary',\n        btnText:'Disable',\n        btnText1:'Enable',\n      })\n\n    }\n  }\n  const toggleButtonRed = () => {\n    if (mode.color === 'dark') {\n      document.body.style.backgroundColor = 'white'\n      styleMode({\n        color: 'light',\n        textColor: 'black',\n        primaryClr: 'primary',\n        btnText1:'Enable',\n        btnText:'Enable',\n      })\n    } else {\n      document.body.style.backgroundColor = 'red'\n      styleMode({\n        color: 'dark',\n        textColor: 'yellow',\n        primaryClr: 'primary',\n        btnText1:'Disable',\n        btnText:'Enable',\n      })\n\n    }\n  }\n\n\n  return (\n    <>\n\n      <NavBar mode={mode} toggleBtnDark={toggleButtonDark} toggleBtnRed={toggleButtonRed} />\n      <TextArea title='Enter the text' mode={mode} />\n\n\n    </>\n  );\n}\n\nexport default App;\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}